{
   "device": {
      "element_reference": "device",
      "specs": {
         "capability1": {
            "type": "String",
            "description": "insert specs here"
         },
         "capability2": {
            "type": "String",
            "description": "insert specs here"
         },
         "Nspecification": {
            "type": "String",
            "description": "insert specs here"
         }
      },
      "api": {
         "add_device": {
            "path": "api/devices/[deviceId]?api-version=2022-07-31",
            "type": "PUT",
            "return": "JSON"
         },
         "get_device": {
            "path": "api/devices/[deviceId]?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         },
         "get_devices": {
            "path": "api/devices?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         }
      }
   },
   "device_template": {
      "api": {
         "add_device_template": {
            "path": "api/deviceTemplates/[deviceTemplateId]?api-version=2022-07-31",
            "type": "PUT",
            "return": "JSON"
         },
         "get_device_template": {
            "path": "api/deviceTemplates/[deviceTemplateId]?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         },
         "get_devices_templates": {
            "path": "api/deviceTemplates?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         }
      }
   },
   "device_group": {
      "api": {
         "add_device_group": {
            "path": "api/deviceGroups/[deviceGroupId]?api-version=2022-07-31",
            "type": "PUT",
            "return": "JSON"
         },
         "get_device_group": {
            "path": "api/deviceGroups/[deviceGroupId]?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         },
         "get_device_groups": {
            "path": "api/deviceGroups?api-version=2022-07-31",
            "type": "GET",
            "return": "JSON"
         }
      }
   },
   "service": {
      "element_reference": "device_profile",
      "specs": {
         "Primary Key": {
            "type": "String",
            "description": "Primary key"
         },
         "Secondary Key": {
            "type": "String",
            "description": "Secondary key"
         }
      },
      "api": {
         "create_device_profile": {
            "path": "api/deviceProfile",
            "type": "POST",
            "return": "JSON"
         },
         "get_device_profile": {
            "path": "api/deviceProfile/[deviceProfileId]",
            "type": "GET",
            "return": "JSON"
         },
         "get_default_device_profile": {
            "path": "api/deviceProfileInfo/default",
            "type": "GET",
            "return": "JSON"
         }
      }
   },
   "person": [
      {
         "Single person": {
            "specs": {}
         },
         "Group of people": {
            "specs": {
               "Number": {
                  "type": "Integer",
                  "description": "Number of people composing the group"
               }
            }
         },
         "output": [
            "Http", "MQTT", "Other"
         ]
      }
   ],
   "thermometer": [
      {
         "Celsius": {
            "specs": {
               "Max": {
                  "type": "Integer",
                  "description": "Maximum degrees measurable"
               },
               "Min": {
                  "type": "String",
                  "description": "Minimum degrees measurable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         },
         "Farhenheit": {
            "specs": {
               "Max": {
                  "type": "Integer",
                  "description": "Maximum degrees measurable"
               },
               "Min": {
                  "type": "String",
                  "description": "Minimum degrees measurable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         },
         "Kelvin": {
            "specs": {
               "Max": {
                  "type": "Integer",
                  "description": "Maximum degrees measurable"
               },
               "Min": {
                  "type": "Integer",
                  "description": "Minimum degrees measurable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         }
      }
   ],
   "photocell": [
      {
         "Light": {
            "specs": {
               "Max": {
                  "type": "Integer",
                  "description": "Maximum lumen measurable"
               },
               "Min": {
                  "type": "Integer",
                  "description": "Minimum lumen measurable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         },
         "Distance": {
            "specs": {
               "Max": {
                  "type": "Integer",
                  "description": "Maximum meters reachable"
               },
               "Min": {
                  "type": "Integer",
                  "description": "Minimum degrees reachable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         }
      }
   ],
   "gateway": [
      {
         "Standard gateway": {
            "specs": {
               "Ports": {
                  "type": "Integer",
                  "description": "Number of network cards"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         }
      }
   ],
   "airQuality": [
      {
         "CO2": {
            "specs": {
               "Place": {
                  "type": "String",
                  "description": "Where the device is placed"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         },
         "Gas": {
            "specs": {
               "Gas": {
                  "type": "String",
                  "description": "Type of gas (ex: methane) detectable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         },
         "Wind": {
            "specs": {
               "Wind": {
                  "type": "Integer",
                  "description": "Maximum velocity of the wind detectable"
               }
            },
            "output": [
               "Http", "MQTT", "Other"
            ]
         }
      }
   ],
   "attribute": [
      {
         "Humidity": {
            "specs": {}
         },
         "Temperature": {
            "specs": {
               "Unit": {
                  "type": "String",
                  "description": "kelvin, degreeCelsius or degreeFahrenheit"
               }
            }
         },
         "Distance": {
            "specs": {
               "Maximum": {
                  "type": "Double",
                  "description": "meters detectable"
               }
            }
         },
         "Acceleration": {
            "specs": {
               "Maximum": {
                  "type": "Double",
                  "description": "m/second squared detectable"
               }
            }
         },
         "Pressure": {
            "specs": {
               "Unit": {
                  "type": "String",
                  "description": "bar / millibar / pascal / kilopascal"
               }
            }
         },
         "Area": {
            "specs": {
               "Unit": {
                  "type": "String",
                  "description": "squareMetre / squareCentimetre / squareMillimetre / squareKilometer / acre / hectare"
               }
            }
         },
         "Mass": {
            "specs": {
               "Unit": {
                  "type": "String",
                  "description": "kilogram / gram / milligram /microgram"
               }
            }
         },
         "Force": {
            "specs": {
               "Unit": {
                  "type": "String",
                  "description": "newton / pound / ounce / ton"
               }
            }
         }
      }
   ],
   "system": {
      "element_reference": "asset",
      "api": {
         "get_asset_types": {
            "path": "api/asset/types",
            "type": "GET",
            "return": "JSON"
         },
         "get_assets_of_type": {
            "path": "api/tenant/assets?type=[objectType]&pageSize=9999&page=0",
            "type": "GET",
            "return": "JSON"
         },
         "get_asset": {
            "path": "api/asset/[assetId]",
            "type": "GET",
            "return": "JSON"
         },
         "create_asset": {
            "path": "api/asset",
            "type": "POST",
            "return": "JSON"
         }
      }
   },
   "dashboard": {
      "element_reference": "asset",
      "api": {
         "get_dashboard": {
            "path": "api/dashboards/[dashboardId]?api-version=2022-10-31-preview",
            "type": "GET",
            "return": "JSON"
         },
         "get_dashboards": {
            "path": "api/dashboards?api-version=2022-10-31-preview",
            "type": "GET",
            "return": "JSON"
         },
         "add_dashboard": {
            "path": " api/dashboards/[dashboardId]?api-version=2022-10-31-preview",
            "type": "PUT",
            "return": "JSON"
         }
      }
   },
   "widget": [
      {
         "Last Known Value (lkv)": {
            "config": {
               "displayName": "Root System Dashboard",
               "tiles": [
                  {
                     "displayName": "Device - Widget (Last Known Value)",
                     "configuration": {
                        "type": "lkv",
                        "capabilities": [
                           {
                              "capability": "EnlightmentFunctionality",
                              "aggregateFunction": "avg"
                           }
                        ],
                        "group": "b514a79f-1c9d-4647-9adf-d8953ca4f91a",
                        "devices": [
                           "2cjxx3vw5wy"
                        ],
                        "format": {
                           "textSize": 14
                        },
                        "queryRange": {
                           "type": "time",
                           "duration": "PT30M",
                           "resolution": "PT1M"
                        }
                     },
                     "x": 0,
                     "y": 0,
                     "width": 2,
                     "height": 2
                  },
                  {
                     "displayName": "Documentation",
                     "configuration": {
                        "type": "markdown",
                        "description": "Comprehensive help articles and links to more support.",
                        "href": "https://aka.ms/iotcentral-pnp-docs",
                        "image": "4d6c6373-0220-4191-be2e-d58ca2a289e1",
                        "queryRange": {
                           "type": "time",
                           "duration": "PT30M",
                           "resolution": "PT1M"
                        }
                     },
                     "x": 2,
                     "y": 0,
                     "width": 1,
                     "height": 1
                  }
               ]
            }
         },
         "Line Chart": {
            "config": {
               "displayName": "Root System Dashboard",
               "tiles": [
                  {
                     "displayName": "Device - Widget (Line chart)",
                     "configuration": {
                        "type": "lineChart",
                        "capabilities": [
                           {
                              "capability": "EnlightmentFunctionality",
                              "aggregateFunction": "avg"
                           }
                        ],
                        "group": "b514a79f-1c9d-4647-9adf-d8953ca4f91a",
                        "devices": [
                           "2cjxx3vw5wy"
                        ],
                        "format": {
                           "textSize": 14
                        },
                        "queryRange": {
                           "type": "time",
                           "duration": "PT30M",
                           "resolution": "PT1M"
                        }
                     },
                     "x": 0,
                     "y": 0,
                     "width": 2,
                     "height": 2
                  },
                  {
                     "displayName": "Documentation",
                     "configuration": {
                        "type": "markdown",
                        "description": "Comprehensive help articles and links to more support.",
                        "href": "https://aka.ms/iotcentral-pnp-docs",
                        "image": "4d6c6373-0220-4191-be2e-d58ca2a289e1"
                     },
                     "x": 2,
                     "y": 0,
                     "width": 1,
                     "height": 1
                  }
               ]
            }
         },
         "Map (property)": {
            "config": {
               "displayName": "Dashboard",
               "tiles": [
                  {
                     "displayName": "Device - Widget Map (property)",
                     "configuration": {
                        "type": "mapProperty",
                        "capabilities": [
                           {
                              "capability": "locationProperty",
                              "aggregateFunction": "avg"
                           }
                        ],
                        "group": "b514a79f-1c9d-4647-9adf-d8953ca4f91a",
                        "devices": [
                           "2cjxx3vw5wy"
                        ],
                        "format": {
                           "zoomLevel": 4
                        }
                     },
                     "x": 0,
                     "y": 0,
                     "width": 2,
                     "height": 2
                  },
                  {
                     "displayName": "Documentation",
                     "configuration": {
                        "type": "markdown",
                        "description": "Comprehensive help articles and links to more support.",
                        "href": "https://aka.ms/iotcentral-pnp-docs",
                        "image": "4d6c6373-0220-4191-be2e-d58ca2a289e1"
                     },
                     "x": 2,
                     "y": 0,
                     "width": 1,
                     "height": 1
                  }
               ]
            }
         }
      }
   ],
   "request_out": [
      {
         "GET": {
            "specs": {
               "URI": {
                  "type": "String",
                  "description": "Destination url"
               },
               "header_Key": {
                  "type": "String",
                  "description": "Key"
               },
               "header_Value": {
                  "type": "String",
                  "description": "Value"
               },
               "body": {
                  "type": "String",
                  "description": "Body"
               }
            },
            "output": [
               "Success"
            ]
         },
         "PUT": {
            "specs": {
               "URI": {
                  "type": "String",
                  "description": "Destination url"
               },
               "header_Key": {
                  "type": "String",
                  "description": "Key"
               },
               "header_Value": {
                  "type": "String",
                  "description": "Value"
               },
               "body": {
                  "type": "String",
                  "description": "Body"
               }
            },
            "output": [
               "Success"
            ]
         },
         "DELETE": {
            "specs": {
               "URI": {
                  "type": "String",
                  "description": "Destination url"
               },
               "header_Key": {
                  "type": "String",
                  "description": "Key"
               },
               "header_Value": {
                  "type": "String",
                  "description": "Value"
               },
               "body": {
                  "type": "String",
                  "description": "Body"
               }
            },
            "output": [
               "Success"
            ]
         },
         "PATCH": {
            "specs": {
               "URI": {
                  "type": "String",
                  "description": "Destination url"
               },
               "header_Key": {
                  "type": "String",
                  "description": "Key"
               },
               "header_Value": {
                  "type": "String",
                  "description": "Value"
               },
               "body": {
                  "type": "String",
                  "description": "Body"
               }
            },
            "output": [
               "Success"
            ]
         },
         "POST": {
            "specs": {
               "URI": {
                  "type": "String",
                  "description": "Destination url"
               },
               "header_Key": {
                  "type": "String",
                  "description": "Key"
               },
               "header_Value": {
                  "type": "String",
                  "description": "Value"
               },
               "body": {
                  "type": "String",
                  "description": "Body"
               }
            },
            "output": [
               "Success"
            ]
         }
      }
   ],
   "pubsub_out": [
      {
         "Send message": {
            "specs": {
               "Session Id": {
                  "type": "String",
                  "description": "Session Id"
               },
               "Session properties": {
                  "type": "String",
                  "description": "'Run details' or 'None'"
               }
            },
            "output": [
               "Success"
            ]
         }
      }
   ],
   "storage": [
      {
         "Create_or_update_a_device": {
            "specs": {
               "Device id": {
                  "type": "String",
                  "description": "Unique ID of the device"
               },
               "Display name": {
                  "type": "String",
                  "description": "Name should be same as the ID"
               }
            },
            "output": [
               "Success"
            ]
         },
         "Insert_Document": {
            "specs": {
               "Collection name": {
                  "type": "String",
                  "Collection name": "collection name"
               },
               "Data source": {
                  "type": "String",
                  "description": "cluster name"
               },
               "Database": {
                  "type": "String",
                  "description": "DB name"
               },
               "Document": {
                  "type": "String",
                  "description": "ejson file"
               }
            },
            "output": [
               "Success"
            ]
         }
      }
   ],
   "data_stream_out": [
      {
         "Run_a_device_command": {
            "specs": {
               "Device id": {
                  "type": "String",
                  "description": "target device id"
               },
               "Command name": {
                  "type": "String",
                  "description": "device command name"
               }
            },
            "output": [
               "Success"
            ]
         }
      }
   ],
   "formatting": [
      {
         "JS code": {
            "specs": {
               "JavaScript code": {
                  "type": "String",
                  "description": "Code to be executed"
               }
            },
            "output": [
               "Success",
               "Failure"
            ]
         }
      }
   ],
   "scripting": [
      {
         "JS code": {
            "specs": {
               "JavaScript code": {
                  "type": "String",
                  "description": "Code to be executed"
               }
            },
            "output": [
               "Success",
               "Failure"
            ]
         }
      }
   ],
   "aggregation": [
      {
         "JS code": {
            "specs": {
               "JavaScript code": {
                  "type": "String",
                  "description": "Code to be executed"
               }
            },
            "output": [
               "Success",
               "Failure"
            ]
         }
      }
   ],
   "filtering": [
      {
         "Condition": {
            "specs": {
               "choose condition": {
                  "type": "String Boolean",
                  "description": "less / greater / equals"
               },
               "than": {
                  "type": "String",
                  "description": "integer value"
               }
            },
            "output": [
               "True",
               "False"
            ]
         }
      }
   ],
   "data_stream_in": [
      {
         "Telemetry": {
            "specs": {
               "Telemetry name": {
                  "type": "String",
                  "description": "Name of the telemetry that sends information"
               }
            },
            "config": {
               "DatastreamInName": {
                  "inputs": {
                     "host": {
                        "connection": {
                           "name": "@parameters('$connections')['azureiotcentral']['connectionId']"
                        }
                     },
                     "method": "get",
                     "path": "/api/v1/devices/@{encodeURIComponent('NomeDevice')}/telemetry/@{encodeURIComponent('[NomeAttribute]')}",
                     "queries": {
                        "application": "idApplicazione"
                     }
                  },
                  "runAfter": {},
                  "type": "ApiConnection"
               }
            }
         }
      }
   ]
}